{"title":"二分查找进阶-最小化最大值问题","uid":"ad7ad0115c35840e2a0cacdefdb15ded","slug":"二分查找进阶-最小化最大值问题","date":"2023-09-20T15:10:01.000Z","updated":"2023-09-26T01:02:26.116Z","comments":true,"path":"api/articles/二分查找进阶-最小化最大值问题.json","keywords":null,"cover":null,"content":"<h4 id=\"最小化最大值介绍\"><a href=\"#最小化最大值介绍\" class=\"headerlink\" title=\"最小化最大值介绍\"></a>最小化最大值介绍</h4><p>参考：<a href=\"https://www.cnblogs.com/cs-whut/p/11216941.html#:~:text=%E8%A6%81%E8%A7%A3%E5%86%B3%E8%BF%99%E4%B8%AA%E6%9C%80%E5%B0%8F%E5%8C%96,%E8%A2%AB%E5%88%86%E4%B8%BAm%E4%B8%AA%E9%83%A8%E5%88%86%E3%80%82\">二分法（二）：采用二分法解决“最小化最大值问题” - aTeacher - 博客园 (cnblogs.com)</a> </p>\n<p>二分法除了可以进行有序查找、解方程等外，还可以用来解决一些实际问题。这些问题中，非常典型的应用就是“最小化最大值问题”和“最大化最小值问题”</p>\n<p>   “最小化最大值问题”和“最大化最小值问题”在优化问题中比较常见，简单来说，“最小化最大值”是为了压制优化目标中表现最突出的成分，“最大化最小值”为了提升优化目标中表现最差的成分。</p>\n<p>   （1）“最小化最大值问题”</p>\n<p>   一般来说，优化时考虑的是目标函数的最大化或最小化的问题。但是在某些情况下，则要求最大值的最小化才有意义。例如，在城市规划中需要确定急救中心、消防中心的位置，可取的目标函数应该是到所有地点最大距离的最小值（即急救中心、消防中心的建设位置应保证它到最远需求点的距离尽可能小），而不是到达所有目的地距离和的最小值。因为城市同时发生事故或同时着火的几率极低，因此更多应该考虑如何降低最恶劣情况的影响，即使是最远的地方出事了，中心到它们的距离也能达到最小。</p>\n<p>   （2）“最大化最小值问题”</p>\n<p>   这个问题在通信链路中应用比较多，如基站同时和多用户通信，每个基站到用户的通信为一个通信链路，且基站的发射功率是固定的。为了保证所有的通信链路都正常工作，应该去优化最差链路的通信情况，降低信道较好链路的基站发射功率，增加信道较差链路的基站发射功率，这是一个最大化最小值问题。</p>\n<h4 id=\"典型的-leetcode题\"><a href=\"#典型的-leetcode题\" class=\"headerlink\" title=\"典型的 leetcode题\"></a>典型的 leetcode题</h4><h5 id=\"410-分割数组的最大值\"><a href=\"#410-分割数组的最大值\" class=\"headerlink\" title=\"410. 分割数组的最大值\"></a>410. 分割数组的最大值</h5><p>该题是典型的最小化最大值问题，即将各个连续数组的和最大值取得最小值。</p>\n<p><strong>思路：</strong>要解决这个最小化最大值的问题，基本思路就是选取任意一个范围（输入数组的最大值到数组所有元素的和），然后在这个范围内进行二分法，每次把范围的中间值 mid 当作最小值，然后判断在 mid 值下数组是否能够被分为 m 个部分。如果判断出值为 mid 时可以将数组分成 m 个部分，就先让mid变大再试试，即增大下界（left&#x3D;mid+1）；如果分不成 m 个部分，说明当前的 mid 太大了，就先让 mid 变小再进行判断，即减小上界（right&#x3D;mid-1）。直到求出一个最大的mid就是最终的答案。</p>\n<p>因为要求各个子数组和的最大值中的最小，所以该值肯定大于等于所有数组的最大值，并且肯定小于等于数组的所有和，并且这个数值是连续递增，于是可以用二分解决。</p>\n<p>最后，针对二分出来的答案是否在数组的元素内？答案是肯定的，假如找到一个合适的 mid ，满足所有要求，但是其值不在元素中，此时该 mid 还可以进一步减去 1，这样一直继续循环下去，可以得到最大的下限。</p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C792EA\">class</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">Solution</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">boolean</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">judge</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">int</span><span style=\"color: #89DDFF\">[]</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">a</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">mid</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">m</span><span style=\"color: #89DDFF\">)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> sum </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> count </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> i </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> i </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\"> a</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">length</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> i</span><span style=\"color: #89DDFF\">++)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            sum </span><span style=\"color: #89DDFF\">+=</span><span style=\"color: #BABED8\"> a</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">];</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">sum </span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> mid</span><span style=\"color: #89DDFF\">)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                sum </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> a</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">];</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                count</span><span style=\"color: #89DDFF\">++;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">count </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&lt;=</span><span style=\"color: #BABED8\"> m</span><span style=\"color: #89DDFF\">)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">true;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">false;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">splitArray</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">int</span><span style=\"color: #89DDFF\">[]</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">nums</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">k</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> left </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> right </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> mid</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> i </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> i </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\"> nums</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">length</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> i</span><span style=\"color: #89DDFF\">++)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            right </span><span style=\"color: #89DDFF\">+=</span><span style=\"color: #BABED8\"> nums</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">];</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">nums</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> left</span><span style=\"color: #89DDFF\">)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                left </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> nums</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">];</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">while</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">left </span><span style=\"color: #89DDFF\">&lt;=</span><span style=\"color: #BABED8\"> right</span><span style=\"color: #89DDFF\">)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            mid </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">left </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #BABED8\"> right</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">/</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">2</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">judge</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">nums</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> mid</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> k</span><span style=\"color: #89DDFF\">))&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                right </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> mid </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #89DDFF; font-style: italic\">else</span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                left </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> mid </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> left</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div><h5 id=\"2560-打家劫舍IV\"><a href=\"#2560-打家劫舍IV\" class=\"headerlink\" title=\"2560. 打家劫舍IV\"></a>2560. 打家劫舍IV</h5><p><a href=\"https://leetcode.cn/problems/house-robber-iv/description/\">2560. 打家劫舍 IV - 力扣（LeetCode）</a></p>\n<p>该题和之前的三个打家劫舍问题不同的是，其题是最小化最大值问题，所以更适合用二分方法。</p>\n<p><strong>思路：</strong></p>\n<p>从中可知，最大值是小偷窃取过程中能从单间房屋中窃取的<strong>最大金额</strong>，所以最小值就是该数组的最小值，而最大值则是该数组的最大值，并且可以认为这些数值是递增，所以可以用二分。</p>\n<p>求解时需要得到一个最大的下限，该值可以能够满足至少窃取 $k$ 个房屋后，小偷的最小窃取能力。求解该问题时，可以用贪心思路，即在从左到右遍历数组时，能偷就偷。</p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C792EA\">class</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">Solution</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">minCapability</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">int</span><span style=\"color: #89DDFF\">[]</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">nums</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">k</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> left </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> Arrays</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">stream</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">nums</span><span style=\"color: #89DDFF\">).</span><span style=\"color: #82AAFF\">min</span><span style=\"color: #89DDFF\">().</span><span style=\"color: #82AAFF\">getAsInt</span><span style=\"color: #89DDFF\">();</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> right </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> Arrays</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">stream</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">nums</span><span style=\"color: #89DDFF\">).</span><span style=\"color: #82AAFF\">max</span><span style=\"color: #89DDFF\">().</span><span style=\"color: #82AAFF\">getAsInt</span><span style=\"color: #89DDFF\">();</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">while</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">left </span><span style=\"color: #89DDFF\">&lt;=</span><span style=\"color: #BABED8\"> right</span><span style=\"color: #89DDFF\">)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> middle </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> left </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">right </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #BABED8\"> left</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">/</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">2</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> count </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> i </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> i </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\"> nums</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">length</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> i</span><span style=\"color: #89DDFF\">++)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">nums</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&lt;=</span><span style=\"color: #BABED8\"> middle</span><span style=\"color: #89DDFF\">)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                    count</span><span style=\"color: #89DDFF\">++;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                    i</span><span style=\"color: #89DDFF\">++;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\">//如果当前偷了，就必须跳过下一个房子</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">count </span><span style=\"color: #89DDFF\">&gt;=</span><span style=\"color: #BABED8\"> k</span><span style=\"color: #89DDFF\">)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                right </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> middle </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #89DDFF; font-style: italic\">else</span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                left </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> middle </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> left</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div>","feature":true,"text":"最小化最大值介绍参考：二分法（二）：采用二分法解决“最小化最大值问题” - aTeacher - 博客园 (cnblogs.com) 二分法除了可以进行有序查找...","permalink":"/post/二分查找进阶-最小化最大值问题","photos":[],"count_time":{"symbolsCount":"3.1k","symbolsTime":"3 mins."},"categories":[],"tags":[{"name":"刷题","slug":"刷题","count":9,"path":"api/tags/刷题.json"},{"name":"二分查找","slug":"二分查找","count":1,"path":"api/tags/二分查找.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%9C%80%E5%B0%8F%E5%8C%96%E6%9C%80%E5%A4%A7%E5%80%BC%E4%BB%8B%E7%BB%8D\"><span class=\"toc-text\">最小化最大值介绍</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%85%B8%E5%9E%8B%E7%9A%84-leetcode%E9%A2%98\"><span class=\"toc-text\">典型的 leetcode题</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#410-%E5%88%86%E5%89%B2%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%A4%A7%E5%80%BC\"><span class=\"toc-text\">410. 分割数组的最大值</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#2560-%E6%89%93%E5%AE%B6%E5%8A%AB%E8%88%8DIV\"><span class=\"toc-text\">2560. 打家劫舍IV</span></a></li></ol></li></ol>","author":{"name":"Aurora","slug":"blog-author","avatar":"","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"Java内存泄露排查与Docker","uid":"b8168afdffad5b347df67f8a5b2d9b7b","slug":"Java内存泄露排查与Docker","date":"2023-10-05T07:34:50.000Z","updated":"2023-10-05T07:42:43.634Z","comments":true,"path":"api/articles/Java内存泄露排查与Docker.json","keywords":null,"cover":null,"text":" 此处是说明如何在Docker环境下进行Java内存泄露排查工作。 前言之所以要进行Java内存排查，这是因为线上部署和运行后，服务器的内存总会不断增加，我认为...","permalink":"/post/Java内存泄露排查与Docker","photos":[],"count_time":{"symbolsCount":653,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"Java","slug":"Java","count":7,"path":"api/tags/Java.json"},{"name":"开发","slug":"开发","count":7,"path":"api/tags/开发.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"数据结构-排序算法-基数排序","uid":"0d2dedcfb9b849bfcbbcb965f4e9512e","slug":"数据结构-排序算法-基数排序","date":"2023-09-17T04:25:43.000Z","updated":"2023-09-25T04:30:27.005Z","comments":true,"path":"api/articles/数据结构-排序算法-基数排序.json","keywords":null,"cover":null,"text":"基数排序适合针对位数比较大的数值的排序，比如手机号等，其思路是构建多个桶，然后每个桶按照其个位数放，然后取出来，接着按照十位数放，再取出来，这样循环处理，就可以...","permalink":"/post/数据结构-排序算法-基数排序","photos":[],"count_time":{"symbolsCount":"1.4k","symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"刷题","slug":"刷题","count":9,"path":"api/tags/刷题.json"},{"name":"排序算法","slug":"排序算法","count":6,"path":"api/tags/排序算法.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true}}