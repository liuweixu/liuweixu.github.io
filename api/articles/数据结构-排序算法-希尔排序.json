{"title":"数据结构-排序算法-希尔排序","uid":"6c54dccc3f8eb40068e225a095cab8fd","slug":"数据结构-排序算法-希尔排序","date":"2023-09-16T03:17:21.000Z","updated":"2023-09-24T03:20:46.909Z","comments":true,"path":"api/articles/数据结构-排序算法-希尔排序.json","keywords":null,"cover":null,"content":"<p>对插入排序的优化<br>要点：  </p>\n<ul>\n<li>实现分组插入，每组元素之间的间隙为 gap  </li>\n<li>每轮排序后 gap 逐渐变小，直至 gap 为 1 完成排序。  </li>\n<li>对插入排序优化，让元素更快速交换到最终位置。  </li>\n<li>插入排序可以视为希尔排序上的 gap 为 1 时的特殊情况 ，所以<strong>程序上和插入排序类似</strong>。</li>\n<li>平均时间复杂度是 **O(nlogn)**，最差时间复杂度是 O(n^2) ，最好的时间复杂度是O(nlogn)</li>\n<li>算法是<strong>不稳定</strong>的。</li>\n</ul>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F78C6C\">import</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">java</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #C792EA\">util</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #C792EA\">Arrays</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">/*</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">对插入排序的优化</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">要点：</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">- 实现分组插入，每组元素之间的间隙为gap</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">- 每轮排序后gap逐渐变小，直至gap为1完成排序。</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">- 对插入排序优化，让元素更快速交换到最终位置。</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">- 插入排序可以视为希尔排序上的gap为1时的特殊情况</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">- 平均时间复杂度是O(nlogn)，最差时间复杂度是O(n^2)，最好的时间复杂度是O(nlogn)</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"> */</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">class</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">ShellSort</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">static</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">shellsort</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">int</span><span style=\"color: #89DDFF\">[]</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">a</span><span style=\"color: #89DDFF\">)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">        </span><span style=\"color: #676E95; font-style: italic\">//a.length / 2</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> gap </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> a</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">length </span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> gap </span><span style=\"color: #89DDFF\">&gt;=</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #BABED8\">  </span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> gap </span><span style=\"color: #89DDFF\">&gt;&gt;=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> low </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> gap</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> low </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\"> a</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">length</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> low</span><span style=\"color: #89DDFF\">++)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> t </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> a</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">low</span><span style=\"color: #89DDFF\">];</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> i </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> low </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #BABED8\"> gap</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">                </span><span style=\"color: #676E95; font-style: italic\">//自右向左找插入位置，如果比待插入元素大，则不断右移，空出插入位置</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                </span><span style=\"color: #89DDFF; font-style: italic\">while</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">i </span><span style=\"color: #89DDFF\">&gt;=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&amp;&amp;</span><span style=\"color: #BABED8\"> t </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\"> a</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">])&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                    a</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">+</span><span style=\"color: #BABED8\">gap</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> a</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">];</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                    i</span><span style=\"color: #89DDFF\">--;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">i </span><span style=\"color: #89DDFF\">!=</span><span style=\"color: #BABED8\"> low </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #BABED8\"> gap</span><span style=\"color: #89DDFF\">)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                    a</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">+</span><span style=\"color: #BABED8\">gap</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> t</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">static</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">main</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">String</span><span style=\"color: #89DDFF\">[]</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">args</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #C792EA\">int</span><span style=\"color: #89DDFF\">[]</span><span style=\"color: #BABED8\"> a </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #F78C6C\">2</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">4</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">5</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">7</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">9</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">4</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">2</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">3</span><span style=\"color: #89DDFF\">&#125;;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">Arrays</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">toString</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">a</span><span style=\"color: #89DDFF\">));</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #82AAFF\">shellsort</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">a</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">Arrays</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">toString</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">a</span><span style=\"color: #89DDFF\">));</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div>","text":"对插入排序的优化要点： 实现分组插入，每组元素之间的间隙为 gap 每轮排序后 gap 逐渐变小，直至 gap 为 1 完成排序。 对插入排序优化，让元素更快速...","permalink":"/post/数据结构-排序算法-希尔排序","photos":[],"count_time":{"symbolsCount":"1.3k","symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"刷题","slug":"刷题","count":9,"path":"api/tags/刷题.json"},{"name":"排序算法","slug":"排序算法","count":6,"path":"api/tags/排序算法.json"}],"toc":"","author":{"name":"Aurora","slug":"blog-author","avatar":"","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"数据结构-排序算法-计数排序","uid":"48cb407f9899e0708dd5fe7c64470ce9","slug":"数据结构-排序算法-计数排序","date":"2023-09-17T03:00:56.000Z","updated":"2023-09-25T03:03:11.626Z","comments":true,"path":"api/articles/数据结构-排序算法-计数排序.json","keywords":null,"cover":null,"text":"计数排序不需要元素交换要点： 找到最大值，创建一个大小为最大值+1的count数组 count 数组的索引对应原始数组的元素，用来统计该元素的出现次数 遍历co...","permalink":"/post/数据结构-排序算法-计数排序","photos":[],"count_time":{"symbolsCount":"1.3k","symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"刷题","slug":"刷题","count":9,"path":"api/tags/刷题.json"},{"name":"排序算法","slug":"排序算法","count":6,"path":"api/tags/排序算法.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"数据结构-排序算法-插入排序","uid":"0871db5f0d6e98bd0968a11fb172bff1","slug":"数据结构-排序算法-插入排序","date":"2023-09-16T02:50:12.000Z","updated":"2023-09-24T02:54:16.497Z","comments":true,"path":"api/articles/数据结构-排序算法-插入排序.json","keywords":null,"cover":null,"text":"注意要和选择排序区分插入排序的要点：【插入】 将数组分为两部分[0…low-1][low…a.length -1]左边是已排序的部分右边是未排序的部分 每次从未...","permalink":"/post/数据结构-排序算法-插入排序","photos":[],"count_time":{"symbolsCount":"1k","symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"刷题","slug":"刷题","count":9,"path":"api/tags/刷题.json"},{"name":"排序算法","slug":"排序算法","count":6,"path":"api/tags/排序算法.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}