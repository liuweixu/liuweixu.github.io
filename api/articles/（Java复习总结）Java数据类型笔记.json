{"title":"（Java复习总结）Java数据类型笔记","uid":"978310dc6cad989500c585bf21064346","slug":"（Java复习总结）Java数据类型笔记","date":"2023-08-20T03:46:43.000Z","updated":"2023-09-07T05:51:59.095Z","comments":true,"path":"api/articles/（Java复习总结）Java数据类型笔记.json","keywords":null,"cover":null,"content":"<p><a href=\"https://javabetter.cn/basic-grammar/basic-data-type.html\">二哥的Java</a></p>\n<h3 id=\"基本类型\"><a href=\"#基本类型\" class=\"headerlink\" title=\"基本类型\"></a>基本类型</h3><ol>\n<li><p>字符字面量应该用单引号（’’）包围，而不是双引号（””），因为<a href=\"https://javabetter.cn/string/constant-pool.html\">双引号表示字符串字面量</a></p>\n</li>\n<li><p>char 类型比较特殊，char 自动转换成 int、long、float 和 double，但 byte 和 short 不能自动转换为 char，而且 char 也不能自动转换为 byte 或 short。</p>\n<p>自动转换：</p>\n<p>byte -&gt; short -&gt; int -&gt; long -&gt; float -&gt; double<br>char -&gt; int -&gt; long -&gt; float -&gt; double</p>\n<p>强制转换：</p>\n<p>double -&gt; float -&gt; long -&gt; int -&gt; char -&gt; short -&gt; byte</p>\n</li>\n<li><p>Integer.toBinaryString() 将证书转为二进制数，String类型的</p>\n</li>\n<li><p>字符常量</p>\n<p>必须使用单引号</p>\n<p>‘\\n’也算是字符常量</p>\n</li>\n</ol>\n<h3 id=\"接口\"><a href=\"#接口\" class=\"headerlink\" title=\"接口\"></a>接口</h3><ol>\n<li>接口不能初始化，也就是说不能使用new。</li>\n</ol>\n<h3 id=\"基本数据与引用数据之间的区别\"><a href=\"#基本数据与引用数据之间的区别\" class=\"headerlink\" title=\"基本数据与引用数据之间的区别\"></a>基本数据与引用数据之间的区别</h3><p>基本数据类型：</p>\n<ul>\n<li>1、变量名指向具体的数值。</li>\n<li>2、基本数据类型存储在<strong>栈</strong>上。</li>\n</ul>\n<p>引用数据类型：</p>\n<ul>\n<li>1、变量名指向的是存储对象的内存地址，在栈上。</li>\n<li>2、内存地址<strong>指向的对象</strong>存储在<strong>堆</strong>上。</li>\n</ul>\n<h3 id=\"堆和栈\"><a href=\"#堆和栈\" class=\"headerlink\" title=\"堆和栈\"></a>堆和栈</h3><p>堆：</p>\n<ul>\n<li>是程序运行时在内存中申请的空间（可理解为动态的过程），不是在编译时。</li>\n<li>动态申请的数据存储位置，比如数组与创建的对象（new方式）等。</li>\n</ul>\n<p>栈：</p>\n<ul>\n<li>栈，能够和处理器（CPU，也就是脑子）直接关联，因此访问速度更快。</li>\n<li>一般放的是编程语句等，对象引用也行，即：Object o这样子，作为对象的引用。</li>\n</ul>\n<p>一个例子：【<a href=\"https://blog.csdn.net/pop1586082213/article/details/118071050#:~:text=%E4%BB%80%E4%B9%88%E6%98%AF%E5%AF%B9%E8%B1%A1%E5%BC%95%E7%94%A8%EF%BC%9F%201%20new%20Phone%20%28%29%20%E6%98%AF%E5%9C%A8%E5%86%85%E5%AD%98%E4%B8%AD%E4%B8%BA%E5%AF%B9%E8%B1%A1%E5%BC%80%E8%BE%9F%E7%A9%BA%E9%97%B4%E3%80%82%20%E5%85%B6%E5%AE%9E%E4%B9%9F%E5%B0%B1%E6%98%AF%20new,3%20%E5%BD%93%E7%94%A8%E7%AD%89%E5%8F%B7%E8%B5%8B%E5%80%BC%E6%97%B6%EF%BC%8C%E6%98%AF%E5%B0%86%E5%8F%B3%E4%BE%A7%20new%20Phone%20%28%29%20%E5%9C%A8%E5%A0%86%E4%B8%AD%E5%88%9B%E5%BB%BA%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%9C%B0%E5%9D%80%E8%B5%8B%E7%BB%99%E5%AF%B9%E8%B1%A1%E5%BC%95%E7%94%A8%20phone%20%E3%80%82\">参考</a>】</p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C792EA\">Phone</span><span style=\"color: #BABED8\"> phone </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">new</span><span style=\"color: #BABED8\"> Phone</span><span style=\"color: #89DDFF\">;</span></span></code></pre></div><p>通常会认为 phone 就是 Phone 类的对象。实际上，phone 是创建 Phone 类的<strong>对象的引用</strong>。</p>\n<p>这个表述实际上执行的操作：</p>\n<ol>\n<li><strong>new Phone()</strong> 是在内存中为对象开辟空间。其实也就是 new 关键字表示在内存的 <strong>堆（heap）</strong> 上为对象<strong>开辟空间</strong>，该空间保存了对象的属性和方法。</li>\n<li>Phone phone ：phone 指代一个 Phone 对象，被称为 <strong>对象引用</strong>。实际上，phone 并不是对象本身，而是一个<strong>类似执行对象的指针</strong>。phone 存在于<strong>内存的栈（stack）</strong> 中。</li>\n<li>当用等号赋值时，是将右侧 new Phone() 在堆中创建对象的地址<strong>赋给</strong>对象引用 phone 。</li>\n</ol>\n<p>为什么要这样操作？简单来讲，有以下几种优点：</p>\n<ol>\n<li>栈的读取速度比堆块，但栈上存储的数据受到有效范围的限制。</li>\n<li>一个对象引用可以赋值给另一个对象引用，此时复制的实际上是对象的地址。因此，一个对象可以由多个对象引用，减少对内存的消耗。</li>\n</ol>\n","text":"二哥的Java 基本类型 字符字面量应该用单引号（’’）包围，而不是双引号（””），因为双引号表示字符串字面量 char 类型比较特殊，char 自动转换成 i...","permalink":"/post/（Java复习总结）Java数据类型笔记","photos":[],"count_time":{"symbolsCount":"1.2k","symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"Java","slug":"Java","count":7,"path":"api/tags/Java.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%9F%BA%E6%9C%AC%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">基本类型</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%8E%A5%E5%8F%A3\"><span class=\"toc-text\">接口</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E4%B8%8E%E5%BC%95%E7%94%A8%E6%95%B0%E6%8D%AE%E4%B9%8B%E9%97%B4%E7%9A%84%E5%8C%BA%E5%88%AB\"><span class=\"toc-text\">基本数据与引用数据之间的区别</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%A0%86%E5%92%8C%E6%A0%88\"><span class=\"toc-text\">堆和栈</span></a></li></ol>","author":{"name":"Aurora","slug":"blog-author","avatar":"","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"（Java复习总结）数组与字符串","uid":"39c3baf125857a0ddb46522ae75bacb7","slug":"（Java复习总结）数组与字符串","date":"2023-08-21T01:52:34.000Z","updated":"2023-09-07T05:54:35.418Z","comments":true,"path":"api/articles/（Java复习总结）数组与字符串.json","keywords":null,"cover":null,"text":"复习资料：掌握Java数组：一个非常特殊的对象 | 二哥的Java进阶之路 (javabetter.cn) 数组的初始化方式 int[] anArray &#x...","permalink":"/post/（Java复习总结）数组与字符串","photos":[],"count_time":{"symbolsCount":577,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"Java","slug":"Java","count":7,"path":"api/tags/Java.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"（开发笔记）平台开发总结记录（随时间更新）","uid":"378ef04860d0061ea328fa054dbf3d74","slug":"（开发笔记）平台开发总结记录（随时间更新）","date":"2023-05-07T02:32:25.000Z","updated":"2023-09-07T02:52:55.384Z","comments":true,"path":"api/articles/（开发笔记）平台开发总结记录（随时间更新）.json","keywords":null,"cover":null,"text":"登录 查看是否登录时，一般会看看线程是否有这个用户（网关处理时会把数据保存到线程上） MP 要掌握如何进行分页 MP在处理多个表时，有时用xml更好，尤其是在查...","permalink":"/post/（开发笔记）平台开发总结记录（随时间更新）","photos":[],"count_time":{"symbolsCount":"3.2k","symbolsTime":"3 mins."},"categories":[],"tags":[{"name":"开发","slug":"开发","count":7,"path":"api/tags/开发.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}