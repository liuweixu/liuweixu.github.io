{"title":"（Java复习总结）多线程简要总结","uid":"c0cf9f2ee6076c351fdadf6a5a89ace4","slug":"（Java复习总结）多线程简要总结","date":"2023-08-28T03:58:30.000Z","updated":"2023-09-07T06:01:04.766Z","comments":true,"path":"api/articles/（Java复习总结）多线程简要总结.json","keywords":null,"cover":[],"content":"<p>复习资料：<a href=\"https://javabetter.cn/home.html\">二哥的Java进阶之路x沉默王二 | 二哥的Java进阶之路 (javabetter.cn)</a></p>\n<h3 id=\"Synchronized\"><a href=\"#Synchronized\" class=\"headerlink\" title=\"Synchronized\"></a>Synchronized</h3><ul>\n<li><p>Syschronized是关键字，可以修饰实例方法、静态方法和代码块。</p>\n<ul>\n<li>修饰实例方法，作用于当前实例加锁，进入同步代码前要获得当前实例的锁；</li>\n<li>修饰静态方法，作用于当前类对象加锁，进入同步代码前要获得当前类对象的锁；</li>\n<li>修饰代码块，指定加锁对象，对给定对象加锁，进入同步代码库前要获得给定对象的锁</li>\n</ul>\n<p>可以让实例方法、静态方法等变为一个临界区</p>\n<p>Java的锁都是基于<strong>对象</strong>的。</p>\n</li>\n<li><p>synchronized可以保证原子性、可见性（能够替代volatile）和有序性。</p>\n<p>而volatile只能保证可见性与有序性，不能保证原子性。</p>\n</li>\n<li><p>synchronized是悲观锁。</p>\n</li>\n<li><p>几个锁的等级排序【要回顾】</p>\n<p>无锁&lt;偏向锁&lt;轻量级锁&lt;重量级锁</p>\n</li>\n</ul>\n<h2 id=\"CAS\"><a href=\"#CAS\" class=\"headerlink\" title=\"CAS\"></a>CAS</h2><ol>\n<li><p>synchronized是悲观锁</p>\n<p>而CAS是乐观锁</p>\n<p><strong>悲观锁：</strong></p>\n<p>悲观锁就是我们常说的锁。对于悲观锁来说，它总是认为每次访问共享资源时会发生冲突，所以必须对每次数据操作加上锁，以保证临界区的程序同一时间只能有一个线程在执行。</p>\n<p><strong>乐观锁：</strong></p>\n<p>乐观锁又称为“<strong>无锁</strong>”，顾名思义，它是乐观派。乐观锁总是假设对共享资源的访问没有冲突，线程可以不停地执行，无需加锁也无需等待。而一旦多个线程发生冲突，乐观锁通常是使用一种称为<strong>CAS</strong>的技术来保证<strong>线程执行的安全性</strong>。</p>\n<p>由于无锁操作中没有锁的存在，因此不可能出现死锁的情况，也就是说<strong>乐观锁天生免疫死锁</strong>。</p>\n<p>乐观锁多用于“读多写少“的环境，避免频繁加锁影响性能；而悲观锁多用于”写多读少“的环境，避免频繁失败和重试影响性能。</p>\n</li>\n</ol>\n<h3 id=\"锁总结-重要，查阅该网址\"><a href=\"#锁总结-重要，查阅该网址\" class=\"headerlink\" title=\"锁总结[重要，查阅该网址]\"></a>锁总结[重要，查阅该网址]</h3><p><a href=\"https://javabetter.cn/thread/suo.html\">公司空降一个美团大佬，彻底把Java中的锁”讲清楚了 | 二哥的Java进阶之路 (javabetter.cn)</a></p>\n<p><img src=\"https://secure2.wostatic.cn/static/cVT9qmnz3xTwL7aR9HPYpS/image.png?auth_key=1694066438-3YDQC8JfwDMXoryS64KkXq-0-6d773945dfe8f3d988052210c57e10b9\"></p>\n","text":"复习资料：二哥的Java进阶之路x沉默王二 | 二哥的Java进阶之路 (javabetter.cn) Synchronized Syschronized是关键...","permalink":"/post/（Java复习总结）多线程简要总结","photos":[],"count_time":{"symbolsCount":785,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"Java","slug":"Java","count":7,"path":"api/tags/Java.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Synchronized\"><span class=\"toc-text\">Synchronized</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#CAS\"><span class=\"toc-text\">CAS</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%94%81%E6%80%BB%E7%BB%93-%E9%87%8D%E8%A6%81%EF%BC%8C%E6%9F%A5%E9%98%85%E8%AF%A5%E7%BD%91%E5%9D%80\"><span class=\"toc-text\">锁总结[重要，查阅该网址]</span></a></li></ol>","author":{"name":"Aurora","slug":"blog-author","avatar":"","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"（秋招笔试-美团）平均数为k的最长连续子数组","uid":"68722260f230b1d25b1de336fbf09213","slug":"（秋招笔试-美团）平均数为k的最长连续子数组","date":"2023-09-01T04:17:24.000Z","updated":"2023-09-07T01:02:12.885Z","comments":true,"path":"api/articles/（秋招笔试-美团）平均数为k的最长连续子数组.json","keywords":null,"cover":null,"text":"题的来源： 平均数为k的最长连续子数组__牛客网 (nowcoder.com) 【重要的参考资料：560. 和为 K 的子数组 - 力扣（LeetCode）】 ...","permalink":"/post/（秋招笔试-美团）平均数为k的最长连续子数组","photos":[],"count_time":{"symbolsCount":956,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"刷题：前缀和","slug":"刷题：前缀和","count":1,"path":"api/tags/刷题：前缀和.json"},{"name":"刷题：哈希表","slug":"刷题：哈希表","count":1,"path":"api/tags/刷题：哈希表.json"},{"name":"秋招","slug":"秋招","count":1,"path":"api/tags/秋招.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"（Java复习总结）面对对象","uid":"1230bafa710dd471057d709666f4e18a","slug":"（Java复习总结）面对对象","date":"2023-08-22T05:55:12.000Z","updated":"2023-09-07T05:57:55.297Z","comments":true,"path":"api/articles/（Java复习总结）面对对象.json","keywords":null,"cover":[],"text":"复习资料：二哥的Java进阶之路x沉默王二 | 二哥的Java进阶之路 (javabetter.cn) 构造方法 在 Java 中，构造方法是一种特殊的方法，当...","permalink":"/post/（Java复习总结）面对对象","photos":[],"count_time":{"symbolsCount":903,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"Java","slug":"Java","count":7,"path":"api/tags/Java.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}