{"title":"（Java复习总结）面对对象","uid":"1230bafa710dd471057d709666f4e18a","slug":"（Java复习总结）面对对象","date":"2023-08-22T05:55:12.000Z","updated":"2023-09-07T05:57:55.297Z","comments":true,"path":"api/articles/（Java复习总结）面对对象.json","keywords":null,"cover":[],"content":"<p>复习资料：<a href=\"https://javabetter.cn/home.html\">二哥的Java进阶之路x沉默王二 | 二哥的Java进阶之路 (javabetter.cn)</a></p>\n<h3 id=\"构造方法\"><a href=\"#构造方法\" class=\"headerlink\" title=\"构造方法\"></a>构造方法</h3><ol>\n<li><p>在 Java 中，构造方法是一种特殊的方法，当一个类被实例化的时候，就会调用构造方法。只有在构造方法被调用的时候，对象才会被<strong>分配内存空间</strong>。每次使用 <code>new</code> 关键字创建对象的时候，构造方法至少会被调用一次。构造方法有无参构造方法与有参构造方法两种。</p>\n<p>注意，之所以叫它构造方法，是因为对象在创建的时候，需要通过<strong>构造方法初始化值</strong>——描写对象有哪些<strong>初始化状态</strong>。</p>\n<p>必须得要有构造方法，这样才能让类的对象初始化为null或其他值。</p>\n<p><strong>没有返回值，但是返回的是类的对象。</strong></p>\n<p><strong>不仅能做初始化工作，还可以做其他工作，比如启动线程、调用其他方法等</strong>。</p>\n</li>\n<li><p>构造方法必须符合以下<strong>规则</strong>：</p>\n<p>1）构造方法的名字必须和类名一样；</p>\n<p>2）构造方法<strong>没有返回类型</strong>，包括 void，否则会当成普通方法来处理。</p>\n<p>3）构造方法<strong>不能是抽象</strong>的（abstract）、静态的（static）、最终的（final）、同步的（synchronized）。</p>\n<p>简单解析一下最后一条规则：</p>\n<p>1）由于构造方法<strong>不能被子类继承</strong>，所以用 final 和 abstract 关键字修饰没有意义；</p>\n<p>2）构造方法用于初始化一个对象，所以用 static 关键字修饰没有意义；</p>\n<p>3）多个线程不会同时创建内存地址相同的同一个对象，所以用 synchronized 关键字修饰没有必要。</p>\n</li>\n<li><p>方法与构造方法之间的<strong>区别</strong>：</p>\n<p><img src=\"https://secure2.wostatic.cn/static/srA7J9pcmRUVvGVNsTP6AZ/image.png?auth_key=1694066108-wbvoTLTecKhRTraVMeMRYt-0-11c19ff298088815d26bd98274099f63\"></p>\n</li>\n<li><p>复制对象的方式</p>\n<p>复制一个对象可以通过下面三种方式完成：</p>\n<ul>\n<li>通过构造方法</li>\n<li>通过对象的值</li>\n<li>通过 Object 类的 <code>clone()</code> 方法</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"权限修饰符\"><a href=\"#权限修饰符\" class=\"headerlink\" title=\"权限修饰符\"></a>权限修饰符</h3><ol>\n<li><p>补充一些关于 Java 包和类文件的知识：</p>\n<p>1）Java 中的包主要是为了防止<strong>类文件命名冲突</strong>以及方便<strong>进行代码组织和管理</strong>；</p>\n<p>2）对于一个 <strong>Java 源代码文件</strong>，如果存在 public 类的话，<strong>只能有一个 public 类</strong>，且此时源代码文件的名称必须和 <strong>public 类的名称完全相同</strong>。</p>\n<p>另外，如果还存在其他类，这些类在包外是不可见的。如果源代码文件没有 public 类，则源代码文件的名称可以随意命名。</p>\n</li>\n</ol>\n","text":"复习资料：二哥的Java进阶之路x沉默王二 | 二哥的Java进阶之路 (javabetter.cn) 构造方法 在 Java 中，构造方法是一种特殊的方法，当...","permalink":"/post/（Java复习总结）面对对象","photos":[],"count_time":{"symbolsCount":903,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"Java","slug":"Java","count":7,"path":"api/tags/Java.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%9E%84%E9%80%A0%E6%96%B9%E6%B3%95\"><span class=\"toc-text\">构造方法</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%9D%83%E9%99%90%E4%BF%AE%E9%A5%B0%E7%AC%A6\"><span class=\"toc-text\">权限修饰符</span></a></li></ol>","author":{"name":"Aurora","slug":"blog-author","avatar":"","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"（Java复习总结）多线程简要总结","uid":"c0cf9f2ee6076c351fdadf6a5a89ace4","slug":"（Java复习总结）多线程简要总结","date":"2023-08-28T03:58:30.000Z","updated":"2023-09-07T06:01:04.766Z","comments":true,"path":"api/articles/（Java复习总结）多线程简要总结.json","keywords":null,"cover":[],"text":"复习资料：二哥的Java进阶之路x沉默王二 | 二哥的Java进阶之路 (javabetter.cn) Synchronized Syschronized是关键...","permalink":"/post/（Java复习总结）多线程简要总结","photos":[],"count_time":{"symbolsCount":785,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"Java","slug":"Java","count":7,"path":"api/tags/Java.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"（Java复习总结）数组与字符串","uid":"39c3baf125857a0ddb46522ae75bacb7","slug":"（Java复习总结）数组与字符串","date":"2023-08-21T01:52:34.000Z","updated":"2023-09-07T05:54:35.418Z","comments":true,"path":"api/articles/（Java复习总结）数组与字符串.json","keywords":null,"cover":null,"text":"复习资料：掌握Java数组：一个非常特殊的对象 | 二哥的Java进阶之路 (javabetter.cn) 数组的初始化方式 int[] anArray &#x...","permalink":"/post/（Java复习总结）数组与字符串","photos":[],"count_time":{"symbolsCount":577,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"Java","slug":"Java","count":7,"path":"api/tags/Java.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}